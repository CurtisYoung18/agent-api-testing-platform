// Prisma Schema for Agent API Testing Platform

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// Agent Configuration
model Agent {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(100)
  region    String   @db.VarChar(10) // 'SG' or 'CN'
  apiKey    String   @db.VarChar(255) @map("api_key")
  status    String   @default("active") @db.VarChar(20)
  lastUsed  DateTime? @map("last_used")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  
  // Relations
  testHistories TestHistory[]
  
  @@map("agents")
}

// Test History
model TestHistory {
  id               Int      @id @default(autoincrement())
  agentId          Int?     @map("agent_id")
  agentName        String   @db.VarChar(100) @map("agent_name")
  testDate         DateTime @default(now()) @map("test_date")
  totalQuestions   Int      @map("total_questions")
  passedCount      Int      @map("passed_count")
  failedCount      Int      @map("failed_count")
  successRate      Decimal  @db.Decimal(5, 2) @map("success_rate")
  durationSeconds  Int      @map("duration_seconds")
  avgResponseTime  Decimal? @db.Decimal(6, 3) @map("avg_response_time")
  executionMode    String?  @db.VarChar(20) @map("execution_mode") // 'parallel' or 'sequential'
  rpm              Int?
  timeoutSeconds   Int?     @map("timeout_seconds")
  retryCount       Int?     @map("retry_count")
  excelBlob        Bytes?   @map("excel_blob")
  markdownBlob     Bytes?   @map("markdown_blob")
  jsonData         Json?    @map("json_data")
  createdAt        DateTime @default(now()) @map("created_at")
  
  // Relations
  agent Agent? @relation(fields: [agentId], references: [id], onDelete: SetNull)
  
  @@index([testDate(sort: Desc)])
  @@index([agentId])
  @@index([successRate])
  @@map("test_history")
}

